# VibeIntelligence Nginx Configuration
# Handles both vi.borg.tools and borg.tools/vi

# Subdomain configuration: vi.borg.tools
server {
    listen 80;
    listen [::]:80;
    server_name vi.borg.tools;

    # Redirect to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name vi.borg.tools;

    # SSL certificates (update paths as needed)
    ssl_certificate /etc/letsencrypt/live/borg.tools/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/borg.tools/privkey.pem;

    # Frontend
    location / {
        proxy_pass http://localhost:8101;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Backend API
    location /api {
        proxy_pass http://localhost:8100;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Path configuration: borg.tools/vi
server {
    listen 80;
    listen [::]:80;
    server_name borg.tools;

    # VI application path
    location /vi {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name borg.tools;

    # SSL certificates (update paths as needed)
    ssl_certificate /etc/letsencrypt/live/borg.tools/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/borg.tools/privkey.pem;

    # VI Frontend at /vi
    location /vi {
        proxy_pass http://localhost:8101/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # VI Backend API at /vi/api
    location /vi/api {
        rewrite ^/vi/api(.*)$ /api$1 break;
        proxy_pass http://localhost:8100;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Your existing borg.tools configuration can go here
    # location / {
    #     # existing borg.tools root configuration
    # }
}