# VibeIntelligence HTTPS Configuration

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name vi.borg.tools borgtools.ddns.net;
    
    location /vi {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server for borgtools.ddns.net/vi
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name borgtools.ddns.net;
    
    # SSL certificates
    ssl_certificate /etc/letsencrypt/live/borgtools.ddns.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/borgtools.ddns.net/privkey.pem;
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # VibeIntelligence at /vi
    location /vi {
        rewrite ^/vi$ /vi/ permanent;
        
        # Frontend
        location /vi/ {
            proxy_pass http://127.0.0.1:8101/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            
            # Fix asset paths
            sub_filter_once off;
            sub_filter 'href="/' 'href="/vi/';
            sub_filter 'src="/' 'src="/vi/';
            sub_filter 'action="/' 'action="/vi/';
            sub_filter_types text/html text/css application/javascript;
        }
        
        # API
        location /vi/api {
            rewrite ^/vi/api(.*)$ /api$1 break;
            proxy_pass http://127.0.0.1:8100;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
    }
}

# HTTPS for vi.borg.tools (when DNS is ready)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name vi.borg.tools;
    
    # We'll need to generate certificate for vi.borg.tools
    # For now, use the wildcard or main domain cert if available
    ssl_certificate /etc/letsencrypt/live/borgtools.ddns.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/borgtools.ddns.net/privkey.pem;
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Frontend
    location / {
        proxy_pass http://127.0.0.1:8101;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
    }
    
    # Backend API
    location /api {
        proxy_pass http://127.0.0.1:8100;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
    }
}